<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <!-- Essential parameters -->
  <arg name="map_path" description="point cloud and lanelet2 map directory path"/>
  <arg name="vehicle_model" description="vehicle model name"/>
  <arg name="sensor_model" description="sensor model name"/>
  <arg name="use_pointcloud_container" default="false" description="launch pointcloud container"/>
  <arg name="pointcloud_container_name" default="pointcloud_container"/>

  <!-- Optional parameters -->
  <!-- Modules to be launched -->
  <arg name="launch_vehicle" default="false" description="launch vehicle"/>
  <arg name="launch_system" default="false" description="launch system"/>
  <arg name="launch_map" default="false" description="launch map"/>
  <arg name="launch_sensing" default="false" description="launch sensing"/>
  <arg name="launch_sensing_driver" default="false" description="launch sensing driver"/>
  <arg name="launch_localization" default="false" description="launch localization"/>
  <arg name="launch_perception" default="true" description="launch perception"/>
  <arg name="launch_planning" default="false" description="launch planning"/>
  <arg name="launch_control" default="false" description="launch control"/>
  <!-- Global parameters -->
  <arg name="use_sim_time" default="false" description="use_sim_time"/>
  <!-- Vehicle -->
  <arg name="vehicle_id" default="$(env VEHICLE_ID default)" description="vehicle specific ID"/>
  <arg name="launch_vehicle_interface" default="true" description="launch vehicle interface"/>
  <!-- Map -->
  <arg name="lanelet2_map_file" default="lanelet2_map.osm" description="lanelet2 map file name"/>
  <arg name="pointcloud_map_file" default="pointcloud_map.pcd" description="pointcloud map file name"/>
  <!-- System -->
  <arg name="system_run_mode" default="online" description="run mode in system"/>
  <arg name="launch_system_monitor" default="true" description="launch system monitor"/>
  <arg name="launch_dummy_diag_publisher" default="false" description="launch dummy diag publisher"/>
  <!-- Tools -->
  <arg name="rviz" default="true" description="launch rviz"/>
  <arg name="rviz_config" default="$(find-pkg-share autoware_launch)/rviz/autoware.rviz" description="rviz config"/>
  <!-- Perception -->
  <arg name="perception_mode" default="lidar" description="select perception mode. camera_lidar_radar_fusion, camera_lidar_fusion, lidar_radar_fusion, lidar, radar"/>
  <arg name="traffic_light_recognition/enable_fine_detection" default="false" description="enable traffic light fine detection"/>

  <!-- Global parameters -->
  <group scoped="false">
    <include file="$(find-pkg-share global_parameter_loader)/launch/global_params.launch.py">
      <arg name="use_sim_time" value="$(var use_sim_time)"/>
      <arg name="vehicle_model" value="$(var vehicle_model)"/>
    </include>
  </group>

  <!-- Pointcloud container -->
  <group if="$(var use_pointcloud_container)">
    <include file="$(find-pkg-share autoware_launch)/launch/pointcloud_container.launch.py">
      <arg name="use_multithread" value="true"/>
      <arg name="container_name" value="$(var pointcloud_container_name)"/>
    </include>
  </group>

  <!-- Vehicle -->
  <group if="$(var launch_vehicle)">
    <include file="$(find-pkg-share tier4_vehicle_launch)/launch/vehicle.launch.xml">
      <arg name="vehicle_model" value="$(var vehicle_model)"/>
      <arg name="sensor_model" value="$(var sensor_model)"/>
      <arg name="vehicle_id" value="$(var vehicle_id)"/>
      <arg name="launch_vehicle_interface" value="$(var launch_vehicle_interface)"/>
      <arg name="config_dir" value="$(find-pkg-share individual_params)/config/$(var vehicle_id)/$(var sensor_model)"/>
    </include>
  </group>

  <!-- System -->
  <group if="$(var launch_system)">
    <include file="$(find-pkg-share autoware_launch)/launch/components/tier4_system_component.launch.xml"/>
  </group>

  <!-- Map -->
  <group if="$(var launch_map)">
    <include file="$(find-pkg-share autoware_launch)/launch/components/tier4_map_component.launch.xml"/>
  </group>

  <!-- Sensing -->
  <group if="$(var launch_sensing)">
    <include file="$(find-pkg-share autoware_launch)/launch/components/tier4_sensing_component.launch.xml"/>
  </group>

  <!-- Localization -->
  <group if="$(var launch_localization)">
    <include file="$(find-pkg-share autoware_launch)/launch/components/tier4_localization_component.launch.xml"/>
  </group>

  <!-- Perception -->
  <group if="$(var launch_perception)">
    <include file="$(find-pkg-share autoware_launch)/launch/components/tier4_digital_twin_perception_component.launch.xml"/>
  </group>

  <!-- Planning -->
  <group if="$(var launch_planning)">
    <include file="$(find-pkg-share autoware_launch)/launch/components/tier4_planning_component.launch.xml"/>
  </group>

  <!-- Control -->
  <group if="$(var launch_control)">
    <include file="$(find-pkg-share autoware_launch)/launch/components/tier4_control_component.launch.xml"/>
  </group>

  <!-- API -->
  <group>
    <include file="$(find-pkg-share autoware_launch)/launch/components/tier4_autoware_api_component.launch.xml"/>
  </group>

  <!-- Tools -->
  <group>
    <node pkg="rviz2" exec="rviz2" name="rviz2" output="screen" args="-d $(var rviz_config) -s $(find-pkg-share autoware_launch)/rviz/image/autoware.png" if="$(var rviz)"/>
  </group>
</launch>