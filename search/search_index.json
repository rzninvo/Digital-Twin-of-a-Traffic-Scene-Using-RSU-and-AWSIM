{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to AUT-DT","text":"<p>Amirkabir University of Technology's open source digital twin research using AWSIM and Autoware.</p>"},{"location":"#introduction","title":"Introduction","text":"<p>In the rapidly evolving landscape of Intelligent Transportation Systems (ITS), Traffic Management, and Autonomous Vehicles, realistic simulation environments are pivotal for testing and advancing cutting-edge technologies. This thesis introduces a practical approach on creating a Digital Twin of a Traffic Scene, enabling high-fidelity simulations of real-world traffic scenarios.</p>"},{"location":"#key-components","title":"Key Components","text":"<ul> <li>Ouster Lidar Data Integration: Real-time conversion of Ouster Lidar <code>.pcap</code> data to <code>PointCloud2</code> ROS2 topics.</li> <li>Dynamic Object Detection: Detection of 3D objects in real-time using Autoware's Perception Module with self-made launchers specifically designed to accept any kind of Lidar PointCloud2 data.</li> <li>AWSIM Integration: Seamless integration of tracked objects into AWSIM, a Unity-based simulator.</li> </ul>"},{"location":"#project-goals","title":"Project Goals:","text":"<ul> <li>Realism: Accurate modeling of real-world traffic conditions captured by sensor data.</li> <li>Automation: An automatic methodology for real-time data transformation and object integration.</li> <li>Validation: Utilization of innovative tools for effective validation and testing.</li> </ul>"},{"location":"#significance","title":"Significance","text":"<ul> <li>Enhances the testing of ITS and traffic management algorithms in a dynamic and realistic virtual environment.</li> <li>Provides a valuable platform for autonomous vehicle development, training, and adaptation to region-specific traffic scenarios.</li> <li>Eliminates the need for synthesized traffic conditions and labor-intensive simulation setups.</li> </ul>"},{"location":"#features","title":"Features","text":"<ul> <li>Seperate repositories for the 3D Simulation and Perception Components (AWSIM Simulation, Autoware Perception Module)</li> <li>Support for Ubuntu 22.04 and Windows 10/11</li> <li>ROS2 native communication (humble)</li> <li>Open sourced</li> <li>Made with Unity</li> </ul> <p>This project presents an opportunity to explore the realms of digital twin, revolutionizing how we simulate and analyze traffic scenarios for the benefit of future transportation systems and autonomous vehicles.</p>"},{"location":"#try-the-simulation-demo-yourself","title":"Try the simulation demo yourself!","text":"<p>To test the AUT-DT demo with Autoware please refer to the Quick start demo section.</p>"},{"location":"DeveloperGuide/Contact/","title":"Contact","text":"<p>English/Farsi OK</p> <p>E-mail : rzninvo@gmail.com - rohamzn@aut.ac.ir  Discord ID: rohamzn  Telegram ID: @Rohamzn</p>"},{"location":"DeveloperGuide/Documentation/","title":"Documentation","text":"<p>This document uses Material for MkDocs. </p>"},{"location":"DeveloperGuide/Documentation/#local-hosting","title":"Local hosting","text":"<p>1 Install Material for <code>MkDocs</code>. <pre><code>$ pip install mkdocs-material\n</code></pre> 2 Hosting on localhost. <pre><code>$ cd Digital-Twin-of-a-Traffic-Scene-Using-RSU-and-AWSIM/\n$ mkdocs serve\nINFO     -  Building documentation...\nINFO     -  Cleaning site directory\nINFO     -  Documentation built in 0.16 seconds\nINFO     -  [03:13:22] Watching paths for changes: 'docs', 'mkdocs.yml'\nINFO     -  [03:13:22] Serving on http://127.0.0.1:8000/\n</code></pre></p> <p>3 Access <code>http://127.0.0.1:8000/</code> with a web browser. </p> <p>For further reference see Material for MkDocs - Getting started.</p>"},{"location":"DeveloperGuide/Documentation/#mkdocs-files","title":"MkDocs files","text":"<p>Use the following <code>/docs</code> directory and <code>mkdocs.yml</code> for new documentation files. <pre><code>Digital-Twin-of-a-Traffic-Scene-Using-RSU-and-AWSIM\n\u251c\u2500 docs/                // markdown and image file for each document.\n\u2514\u2500 mkdocs.yml           // mkdocs config.\n</code></pre> Create one directory per document. For example, the directory structure of this \"Documentation\" page might look like this. <pre><code>Digital-Twin-of-a-Traffic-Scene-Using-RSU-and-AWSIM\n\u2514\u2500 docs/                            // Root of all documents\n    \u2514\u2500 DeveloperGuide               // Category\n        \u2514\u2500 Documentation            // Root of each document\n            \u251c\u2500 index.md             // Markdown file\n            \u2514\u2500 image_0.png          // Images used in markdown file\n</code></pre></p>"},{"location":"DeveloperGuide/Documentation/#deploy-hosting","title":"Deploy &amp; Hosting","text":"<p>When docs are pushed to the main branch, they are deployed to GitHub Pages using GitHub Actions. See also Material for MkDocs - Publishing your site</p>"},{"location":"DeveloperGuide/HowToContribute/","title":"How to Contribute","text":"<p>Everyone is welcome!</p>"},{"location":"DeveloperGuide/HowToContribute/#issue","title":"Issue","text":"<p>Before you post an issue, please search Issues.</p> <p>This page is helpful how to create an issue from a repository.</p>"},{"location":"DeveloperGuide/HowToContribute/#bug-report","title":"Bug report","text":"<p>If you find a new bug, please create an issue here</p>"},{"location":"DeveloperGuide/HowToContribute/#feature-request","title":"Feature request","text":"<p>If you propose a new feature or have an idea, please create an issue here</p>"},{"location":"DeveloperGuide/HowToContribute/#task","title":"Task","text":"<p>If you have plan to contribute AWSIM, please create an issue here.</p>"},{"location":"DeveloperGuide/HowToContribute/#question","title":"Question","text":"<ul> <li>If you need a general support, please contact us.</li> </ul>"},{"location":"DeveloperGuide/HowToContribute/#pull-requests","title":"Pull requests","text":"<p>If you have an idea to improve the simulation, you can submit a pull request. The following process should be followed:</p> <ol> <li>Create a derived branch (<code>feature/***</code>) from the <code>main</code> branch.</li> <li>Create a pull request to the <code>main</code> branch.</li> </ol>"},{"location":"DeveloperGuide/License/","title":"AUT-DT Licenses","text":"<p>AUT-DT License applies to tier4/AWSIM repositories, autowarefoundation/Autoware repositories, and all content contained in the Releases.</p> <ul> <li>AWSIM and Autoware specific code is distributed under Apache2.0 License. The following extensions are included (<code>*.cs</code> <code>*.compute</code> <code>*.xml</code>)</li> <li>AWSIM specific assets are distributed under CC BY-NC License. The following extensions are included (<code>*.fbx</code> <code>*.pcd</code> <code>*.osm</code> <code>*.png</code> <code>*.anim</code> <code>*.unitypackage</code> <code>*.x86_64</code>)</li> </ul>"},{"location":"DeveloperGuide/License/#apache20-license","title":"Apache2.0 License","text":"<pre><code>**********************************************************************************\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2022 TIER IV, Inc.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n</code></pre>"},{"location":"DeveloperGuide/License/#cc-by-nc-license","title":"CC BY-NC License","text":"<pre><code>**********************************************************************************\n\nAttribution-NonCommercial 4.0 International\n\n=======================================================================\n\nCreative Commons Corporation (\"Creative Commons\") is not a law firm and\ndoes not provide legal services or legal advice. Distribution of\nCreative Commons public licenses does not create a lawyer-client or\nother relationship. Creative Commons makes its licenses and related\ninformation available on an \"as-is\" basis. Creative Commons gives no\nwarranties regarding its licenses, any material licensed under their\nterms and conditions, or any related information. Creative Commons\ndisclaims all liability for damages resulting from their use to the\nfullest extent possible.\n\nUsing Creative Commons Public Licenses\n\nCreative Commons public licenses provide a standard set of terms and\nconditions that creators and other rights holders may use to share\noriginal works of authorship and other material subject to copyright\nand certain other rights specified in the public license below. The\nfollowing considerations are for informational purposes only, are not\nexhaustive, and do not form part of our licenses.\n\n     Considerations for licensors: Our public licenses are\n     intended for use by those authorized to give the public\n     permission to use material in ways otherwise restricted by\n     copyright and certain other rights. Our licenses are\n     irrevocable. Licensors should read and understand the terms\n     and conditions of the license they choose before applying it.\n     Licensors should also secure all rights necessary before\n     applying our licenses so that the public can reuse the\n     material as expected. Licensors should clearly mark any\n     material not subject to the license. This includes other CC-\n     licensed material, or material used under an exception or\n     limitation to copyright. More considerations for licensors:\n    wiki.creativecommons.org/Considerations_for_licensors\n\n     Considerations for the public: By using one of our public\n     licenses, a licensor grants the public permission to use the\n     licensed material under specified terms and conditions. If\n     the licensor's permission is not necessary for any reason--for\n     example, because of any applicable exception or limitation to\n     copyright--then that use is not regulated by the license. Our\n     licenses grant only permissions under copyright and certain\n     other rights that a licensor has authority to grant. Use of\n     the licensed material may still be restricted for other\n     reasons, including because others have copyright or other\n     rights in the material. A licensor may make special requests,\n     such as asking that all changes be marked or described.\n     Although not required by our licenses, you are encouraged to\n     respect those requests where reasonable. More considerations\n     for the public:\n    wiki.creativecommons.org/Considerations_for_licensees\n\n=======================================================================\n\nCreative Commons Attribution-NonCommercial 4.0 International Public\nLicense\n\nBy exercising the Licensed Rights (defined below), You accept and agree\nto be bound by the terms and conditions of this Creative Commons\nAttribution-NonCommercial 4.0 International Public License (\"Public\nLicense\"). To the extent this Public License may be interpreted as a\ncontract, You are granted the Licensed Rights in consideration of Your\nacceptance of these terms and conditions, and the Licensor grants You\nsuch rights in consideration of benefits the Licensor receives from\nmaking the Licensed Material available under these terms and\nconditions.\n\n\nSection 1 -- Definitions.\n\n  a. Adapted Material means material subject to Copyright and Similar\n     Rights that is derived from or based upon the Licensed Material\n     and in which the Licensed Material is translated, altered,\n     arranged, transformed, or otherwise modified in a manner requiring\n     permission under the Copyright and Similar Rights held by the\n     Licensor. For purposes of this Public License, where the Licensed\n     Material is a musical work, performance, or sound recording,\n     Adapted Material is always produced where the Licensed Material is\n     synched in timed relation with a moving image.\n\n  b. Adapter's License means the license You apply to Your Copyright\n     and Similar Rights in Your contributions to Adapted Material in\n     accordance with the terms and conditions of this Public License.\n\n  c. Copyright and Similar Rights means copyright and/or similar rights\n     closely related to copyright including, without limitation,\n     performance, broadcast, sound recording, and Sui Generis Database\n     Rights, without regard to how the rights are labeled or\n     categorized. For purposes of this Public License, the rights\n     specified in Section 2(b)(1)-(2) are not Copyright and Similar\n     Rights.\n  d. Effective Technological Measures means those measures that, in the\n     absence of proper authority, may not be circumvented under laws\n     fulfilling obligations under Article 11 of the WIPO Copyright\n     Treaty adopted on December 20, 1996, and/or similar international\n     agreements.\n\n  e. Exceptions and Limitations means fair use, fair dealing, and/or\n     any other exception or limitation to Copyright and Similar Rights\n     that applies to Your use of the Licensed Material.\n\n  f. Licensed Material means the artistic or literary work, database,\n     or other material to which the Licensor applied this Public\n     License.\n\n  g. Licensed Rights means the rights granted to You subject to the\n     terms and conditions of this Public License, which are limited to\n     all Copyright and Similar Rights that apply to Your use of the\n     Licensed Material and that the Licensor has authority to license.\n\n  h. Licensor means the individual(s) or entity(ies) granting rights\n     under this Public License.\n\n  i. NonCommercial means not primarily intended for or directed towards\n     commercial advantage or monetary compensation. For purposes of\n     this Public License, the exchange of the Licensed Material for\n     other material subject to Copyright and Similar Rights by digital\n     file-sharing or similar means is NonCommercial provided there is\n     no payment of monetary compensation in connection with the\n     exchange.\n\n  j. Share means to provide material to the public by any means or\n     process that requires permission under the Licensed Rights, such\n     as reproduction, public display, public performance, distribution,\n     dissemination, communication, or importation, and to make material\n     available to the public including in ways that members of the\n     public may access the material from a place and at a time\n     individually chosen by them.\n\n  k. Sui Generis Database Rights means rights other than copyright\n     resulting from Directive 96/9/EC of the European Parliament and of\n     the Council of 11 March 1996 on the legal protection of databases,\n     as amended and/or succeeded, as well as other essentially\n     equivalent rights anywhere in the world.\n\n  l. You means the individual or entity exercising the Licensed Rights\n     under this Public License. Your has a corresponding meaning.\n\n\nSection 2 -- Scope.\n\n  a. License grant.\n\n       1. Subject to the terms and conditions of this Public License,\n          the Licensor hereby grants You a worldwide, royalty-free,\n          non-sublicensable, non-exclusive, irrevocable license to\n          exercise the Licensed Rights in the Licensed Material to:\n\n            a. reproduce and Share the Licensed Material, in whole or\n               in part, for NonCommercial purposes only; and\n\n            b. produce, reproduce, and Share Adapted Material for\n               NonCommercial purposes only.\n\n       2. Exceptions and Limitations. For the avoidance of doubt, where\n          Exceptions and Limitations apply to Your use, this Public\n          License does not apply, and You do not need to comply with\n          its terms and conditions.\n\n       3. Term. The term of this Public License is specified in Section\n          6(a).\n\n       4. Media and formats; technical modifications allowed. The\n          Licensor authorizes You to exercise the Licensed Rights in\n          all media and formats whether now known or hereafter created,\n          and to make technical modifications necessary to do so. The\n          Licensor waives and/or agrees not to assert any right or\n          authority to forbid You from making technical modifications\n          necessary to exercise the Licensed Rights, including\n          technical modifications necessary to circumvent Effective\n          Technological Measures. For purposes of this Public License,\n          simply making modifications authorized by this Section 2(a)\n          (4) never produces Adapted Material.\n\n       5. Downstream recipients.\n\n            a. Offer from the Licensor -- Licensed Material. Every\n               recipient of the Licensed Material automatically\n               receives an offer from the Licensor to exercise the\n               Licensed Rights under the terms and conditions of this\n               Public License.\n\n            b. No downstream restrictions. You may not offer or impose\n               any additional or different terms or conditions on, or\n               apply any Effective Technological Measures to, the\n               Licensed Material if doing so restricts exercise of the\n               Licensed Rights by any recipient of the Licensed\n               Material.\n\n       6. No endorsement. Nothing in this Public License constitutes or\n          may be construed as permission to assert or imply that You\n          are, or that Your use of the Licensed Material is, connected\n          with, or sponsored, endorsed, or granted official status by,\n          the Licensor or others designated to receive attribution as\n          provided in Section 3(a)(1)(A)(i).\n\n  b. Other rights.\n\n       1. Moral rights, such as the right of integrity, are not\n          licensed under this Public License, nor are publicity,\n          privacy, and/or other similar personality rights; however, to\n          the extent possible, the Licensor waives and/or agrees not to\n          assert any such rights held by the Licensor to the limited\n          extent necessary to allow You to exercise the Licensed\n          Rights, but not otherwise.\n\n       2. Patent and trademark rights are not licensed under this\n          Public License.\n\n       3. To the extent possible, the Licensor waives any right to\n          collect royalties from You for the exercise of the Licensed\n          Rights, whether directly or through a collecting society\n          under any voluntary or waivable statutory or compulsory\n          licensing scheme. In all other cases the Licensor expressly\n          reserves any right to collect such royalties, including when\n          the Licensed Material is used other than for NonCommercial\n          purposes.\n\n\nSection 3 -- License Conditions.\n\nYour exercise of the Licensed Rights is expressly made subject to the\nfollowing conditions.\n\n  a. Attribution.\n\n       1. If You Share the Licensed Material (including in modified\n          form), You must:\n\n            a. retain the following if it is supplied by the Licensor\n               with the Licensed Material:\n\n                 i. identification of the creator(s) of the Licensed\n                    Material and any others designated to receive\n                    attribution, in any reasonable manner requested by\n                    the Licensor (including by pseudonym if\n                    designated);\n\n                ii. a copyright notice;\n\n               iii. a notice that refers to this Public License;\n\n                iv. a notice that refers to the disclaimer of\n                    warranties;\n\n                 v. a URI or hyperlink to the Licensed Material to the\n                    extent reasonably practicable;\n\n            b. indicate if You modified the Licensed Material and\n               retain an indication of any previous modifications; and\n\n            c. indicate the Licensed Material is licensed under this\n               Public License, and include the text of, or the URI or\n               hyperlink to, this Public License.\n\n       2. You may satisfy the conditions in Section 3(a)(1) in any\n          reasonable manner based on the medium, means, and context in\n          which You Share the Licensed Material. For example, it may be\n          reasonable to satisfy the conditions by providing a URI or\n          hyperlink to a resource that includes the required\n          information.\n\n       3. If requested by the Licensor, You must remove any of the\n          information required by Section 3(a)(1)(A) to the extent\n          reasonably practicable.\n\n       4. If You Share Adapted Material You produce, the Adapter's\n          License You apply must not prevent recipients of the Adapted\n          Material from complying with this Public License.\n\n\nSection 4 -- Sui Generis Database Rights.\n\nWhere the Licensed Rights include Sui Generis Database Rights that\napply to Your use of the Licensed Material:\n\n  a. for the avoidance of doubt, Section 2(a)(1) grants You the right\n     to extract, reuse, reproduce, and Share all or a substantial\n     portion of the contents of the database for NonCommercial purposes\n     only;\n\n  b. if You include all or a substantial portion of the database\n     contents in a database in which You have Sui Generis Database\n     Rights, then the database in which You have Sui Generis Database\n     Rights (but not its individual contents) is Adapted Material; and\n\n  c. You must comply with the conditions in Section 3(a) if You Share\n     all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not\nreplace Your obligations under this Public License where the Licensed\nRights include other Copyright and Similar Rights.\n\n\nSection 5 -- Disclaimer of Warranties and Limitation of Liability.\n\n  a. UNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE\n     EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS\n     AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF\n     ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS,\n     IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION,\n     WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR\n     PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS,\n     ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT\n     KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT\n     ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.\n\n  b. TO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE\n     TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION,\n     NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT,\n     INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES,\n     COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR\n     USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN\n     ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR\n     DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR\n     IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.\n\n  c. The disclaimer of warranties and limitation of liability provided\n     above shall be interpreted in a manner that, to the extent\n     possible, most closely approximates an absolute disclaimer and\n     waiver of all liability.\n\n\nSection 6 -- Term and Termination.\n\n  a. This Public License applies for the term of the Copyright and\n     Similar Rights licensed here. However, if You fail to comply with\n     this Public License, then Your rights under this Public License\n     terminate automatically.\n\n  b. Where Your right to use the Licensed Material has terminated under\n     Section 6(a), it reinstates:\n\n       1. automatically as of the date the violation is cured, provided\n          it is cured within 30 days of Your discovery of the\n          violation; or\n\n       2. upon express reinstatement by the Licensor.\n\n     For the avoidance of doubt, this Section 6(b) does not affect any\n     right the Licensor may have to seek remedies for Your violations\n     of this Public License.\n\n  c. For the avoidance of doubt, the Licensor may also offer the\n     Licensed Material under separate terms or conditions or stop\n     distributing the Licensed Material at any time; however, doing so\n     will not terminate this Public License.\n\n  d. Sections 1, 5, 6, 7, and 8 survive termination of this Public\n     License.\n\n\nSection 7 -- Other Terms and Conditions.\n\n  a. The Licensor shall not be bound by any additional or different\n     terms or conditions communicated by You unless expressly agreed.\n\n  b. Any arrangements, understandings, or agreements regarding the\n     Licensed Material not stated herein are separate from and\n     independent of the terms and conditions of this Public License.\n\n\nSection 8 -- Interpretation.\n\n  a. For the avoidance of doubt, this Public License does not, and\n     shall not be interpreted to, reduce, limit, restrict, or impose\n     conditions on any use of the Licensed Material that could lawfully\n     be made without permission under this Public License.\n\n  b. To the extent possible, if any provision of this Public License is\n     deemed unenforceable, it shall be automatically reformed to the\n     minimum extent necessary to make it enforceable. If the provision\n     cannot be reformed, it shall be severed from this Public License\n     without affecting the enforceability of the remaining terms and\n     conditions.\n\n  c. No term or condition of this Public License will be waived and no\n     failure to comply consented to unless expressly agreed to by the\n     Licensor.\n\n  d. Nothing in this Public License constitutes or may be interpreted\n     as a limitation upon, or waiver of, any privileges and immunities\n     that apply to the Licensor or You, including from the legal\n     processes of any jurisdiction or authority.\n\n=======================================================================\n\nCreative Commons is not a party to its public\nlicenses. Notwithstanding, Creative Commons may elect to apply one of\nits public licenses to material it publishes and in those instances\nwill be considered the \u201cLicensor.\u201d The text of the Creative Commons\npublic licenses is dedicated to the public domain under the CC0 Public\nDomain Dedication. Except for the limited purpose of indicating that\nmaterial is shared under a Creative Commons public license or as\notherwise permitted by the Creative Commons policies published at\ncreativecommons.org/policies, Creative Commons does not authorize the\nuse of the trademark \"Creative Commons\" or any other trademark or logo\nof Creative Commons without its prior written consent including,\nwithout limitation, in connection with any unauthorized modifications\nto any of its public licenses or any other arrangements,\nunderstandings, or agreements concerning use of licensed material. For\nthe avoidance of doubt, this paragraph does not form part of the\npublic licenses.\n\nCreative Commons may be contacted at creativecommons.org\n</code></pre>"},{"location":"DeveloperGuide/TroubleShooting/","title":"Trouble shooting","text":"<p>This document describes the most common errors encountered when working with AWSIM or Autoware.</p> Trouble Solution error: <code>TASK [autoware.dev_env.cuda : Install CUDA keyring] *****************</code> <code>fatal: [localhost]: FAILED! =&gt; \"changed\": false, \"msg\":</code> <code>\"A later version is already installed\"</code> when installing CUDA keyring. 1. Install CUDA Toolkit 11.6 manually:  <code>wget https://developer.download.nvidia.com/compute/cuda/11.6.0/local_installers/cuda_11.6.0_510.39.01_linux.run</code><code>sudo sh cuda_11.6.0_510.39.01_linux.run</code>  2. Downgrade your CUDA keyring to  <code>cuda-keyring_1.0-1_all.deb</code> error: <code>/usr/include/c++/11/bits/std_function.h:435:145:</code> <code>error: parameter packs not expanded with \u2018...\u2019: 435 | function(_Functor&amp;&amp; __f)</code>  when building autoware. There are two solutions:  1. Visit this link  2. Run these sets of commands:  <code>sudo apt install gcc-10 g++-10</code> <code>sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 10</code> <code>sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 10</code> <code>sudo update-alternatives --config gcc</code> <code>sudo update-alternatives --config g++</code> <code>sudo reboot</code> Massive output of Plugins errors <code>git clone</code> the AWSIM repository again error : <code>RuntimeError: error not set, at C:\\ci\\ws\\src\\ros2\\rcl\\rcl\\src\\rcl\\node.c:262</code> Set up environment variables and config around ROS2 correctly. For example: - Environment variables - <code>cyclonedds_config.xml</code> <code>$ ros2 topic list</code> is not displayed - your machine <code>ROS_DOMAIN_ID</code> is different- <code>ROS2</code> is not sourced Using AWSIM on Windows and Autoware on Ubuntu.  <code>$ ros2 topic list</code> is not displayed. Allow the communication in Windows Firewall self-driving stops in the middle of the road. Check if your map data is correct (PointCloud, VectorMap, 3D fbx models) Connecting AWSIM and Autoware results in bad network Make ros local host-only. Include the following in the .bashrc (The password will be requested at terminal startup after OS startup.)  <code>export ROS_LOCALHOST_ONLY=1</code><code>export RMW_IMPLEMENTATION=rmw_cyclonedds_cpp</code><code>if [ ! -e /tmp/cycloneDDS_configured ]; then</code><code>sudo sysctl -w net.core.rmem_max=2147483647</code><code>sudo ip link set lo multicast on</code><code>touch /tmp/cycloneDDS_configured</code><code>fi</code> Error when starting AWSIM binary. <code>segmentation fault (core dumped)</code> Check if yourNvidia drivers or Vulkan API are installed correctly Initial pose does not match automatically. Unity crashes and check the log for the cause of the error. Editor log file locationWindows : <code>C:\\Users\\username\\AppData\\Local\\Unity\\Editor\\Editor.log</code>Linux : <code>~/.config/unity3d/.Editor.log</code> Player log file location Windows : <code>C:\\Users\\username\\AppData\\LocalLow\\CompanyName\\ProductName\\output_log.txt</code>Linux :<code>~/.config/unity3d/CompanyName/ProductName/Player.log</code>See also : Unity Documentation - Log Files Safe mode dialog appears when starting UnityEditor.  or  error : <code>No usable version of libssl was found</code> 1. download libssl  <code>$ wget http://security.ubuntu.com/ubuntu/pool/main/o/openssl1.0/libssl1.0.0_1.0.2n-1ubuntu5.11_amd64.deb</code>  2. install  <code>sudo dpkg -i libssl1.0.0_1.0.2n-1ubuntu5.11_amd64.deb</code>"},{"location":"GettingStarted/QuickStartDemo/","title":"Quick Start Demo","text":"<p>Below you can find instructions on how to setup the semi-automatic demo of AUT-DT simulation made possible with Autoware and AWSIM. The instruction assumes using the Ubuntu OS.</p> <p></p>"},{"location":"GettingStarted/QuickStartDemo/#demo-configuration","title":"Demo configuration","text":"<p>The simulation provided in the AUT-DT demo is configured as follows:</p> AUT-DT Demo Settings Environment Amirkabir University of Technology, Rasht Street Sensors OS1:64 LiDAR * 1 3D Detection Model TensorRT Centerpoint fp32 Data Association Solver muSSP Main Tracker EKF ROS2 humble Autoware digital_twin branch"},{"location":"GettingStarted/QuickStartDemo/#pc-specs","title":"PC specs","text":"<p>Please make sure that your machine meets the following requirements in order to run the simulation correctly:</p> Required PC Specs OS Ubuntu 22.04 CPU 6cores and 12thread or higher GPU RTX 20 Series or higher Nvidia Driver (Windows) &gt;=472.50 Nvidia Driver (Ubuntu 22) &gt;=515.43.04"},{"location":"GettingStarted/QuickStartDemo/#localhost-settings","title":"Localhost settings","text":"<p>The simulation is based on the appropriate network setting, which allows for trouble-free communication of the AWSIM simulation with the Autoware software. To apply required localhost settings please add the following lines to <code>~/.bashrc</code> file.</p> <pre><code>export ROS_LOCALHOST_ONLY=1\nexport RMW_IMPLEMENTATION=rmw_cyclonedds_cpp\n\nif [ ! -e /tmp/cycloneDDS_configured ]; then\n    sudo sysctl -w net.core.rmem_max=2147483647\n    sudo ip link set lo multicast on\n    touch /tmp/cycloneDDS_configured\nfi\n</code></pre>"},{"location":"GettingStarted/QuickStartDemo/#start-the-demo","title":"Start the demo","text":""},{"location":"GettingStarted/QuickStartDemo/#running-the-aut-dt-simulation-demo","title":"Running the AUT-DT simulation demo","text":"<p>To run the simulator, please follow the steps below.</p> <ol> <li> <p>Install Nvidia GPU driver (Skip if already installed).</p> <ol> <li>Add Nvidia driver to apt repository <pre><code>sudo add-apt-repository ppa:graphics-drivers/ppa\nsudo apt update\n</code></pre></li> <li>Install the recommended version of the driver. <pre><code>sudo ubuntu-drivers autoinstall\n</code></pre></li> <li>Reboot your machine to make the installed driver detected by the system. <pre><code>sudo reboot\n</code></pre></li> <li>Open terminal and check if <code>nvidia-smi</code> command is available and outputs summary similar to the one presented below. <pre><code>$ nvidia-smi \nSat Nov 25 14:47:51 2023       \n+-----------------------------------------------------------------------------+\n| NVIDIA-SMI 545.23.08    Driver Version: 545.23.08    CUDA Version: 12.3     |\n|-------------------------------+----------------------+----------------------+\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n|                               |                      |               MIG M. |\n|===============================+======================+======================|\n|   0  NVIDIA GeForce ...   On  | 00000000:01:00.0 Off |                  N/A |\n| N/A%   34C    P0  751W / 115W |   11MiB / 16384MiB   |      0%      Default |\n|                               |                      |                  N/A |\n+-------------------------------+----------------------+----------------------+\n\n+-----------------------------------------------------------------------------+\n| Processes:                                                                  |\n|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n|        ID   ID                                                   Usage      |\n|=============================================================================|\n|    0   N/A  N/A      2873      G   /usr/lib/xorg/Xorg                 4MiB  |\n+-----------------------------------------------------------------------------+\n</code></pre></li> </ol> </li> <li> <p>Install Vulkan Graphics Library (Skip if already installed).</p> <ol> <li>Update the environment. <pre><code>sudo apt update\n</code></pre></li> <li>Install the library. <pre><code>sudo apt install libvulkan1\n</code></pre></li> </ol> </li> <li> <p>Download and Run AWSIM Amirkabir Scene binary.</p> <ol> <li> <p>Download <code>AUT-DT_v1.0.0.zip</code>.</p> <p>Download AWSIM Amirkabir Scene for ubuntu</p> </li> <li> <p>Unzip the downloaded file.</p> </li> <li> <p>Make the <code>AWSIM_Amirkabir_Scene.x86_64</code> file executable.</p> <p>Rightclick the <code>AWSIM_Amirkabir_Scene.x86_64</code> file and check the <code>Execute</code> checkbox</p> <p></p> <p>or execute the command below.</p> <pre><code>chmod +x &lt;path to AUT-DT folder&gt;/AWSIM_Amirkabir_Scene.x86_64\n</code></pre> </li> <li> <p>Launch <code>AWSIM_Amirkabir_Scene.x86_64</code>.     <pre><code>./&lt;path to AUT-DT folder&gt;/AWSIM_Amirkabir_Scene.x86_64\n</code></pre></p> <p>Warning</p> <p>It may take some time for the application to start the so please wait until image similar to the one presented below is visible in your application window.</p> <p></p> </li> </ol> </li> </ol>"},{"location":"GettingStarted/QuickStartDemo/#launching-autoware","title":"Launching Autoware","text":"<p>In order to configure and run the Autoware software with the AWSIM Simulator, please:</p> <ol> <li>Clone Autoware and move to the directory. <pre><code>git clone https://github.com/rzninvo/autoware.git\ncd autoware\n</code></pre></li> <li>Switch branche to <code>digital_twin</code>. NOTE: The latest <code>main</code> branch is for ROS 2 humble. <pre><code>git checkout digital_twin\n</code></pre></li> <li>Configure the environment. (Skip if Autoware environment has been configured before) <pre><code>./setup-dev-env.sh\n</code></pre></li> <li>Create the <code>src</code> directory and clone external dependent repositories into it. <pre><code>mkdir src\nvcs import src &lt; autoware.repos\n</code></pre></li> <li>Install dependent ROS packages. <pre><code>source /opt/ros/humble/setup.bash\nrosdep update\nrosdep install -y --from-paths src --ignore-src --rosdistro $ROS_DISTRO\n</code></pre></li> <li>Build the workspace. <pre><code>colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=\"-w\"\n</code></pre></li> <li> <p>Launch Autoware. <pre><code>source install/setup.bash\nros2 launch autoware_launch digital_twin.launch.xml\n</code></pre>     (Optional Launch) For when you have a <code>.pcd</code> map file: <pre><code>source install/setup.bash\nros2 launch autoware_launch digital_twin.launch.xml map_path:=&lt;your mapfile location&gt;\n</code></pre></p> <p>Warning</p> <p><code>&lt;your mapfile location&gt;</code> must be changed arbitrarily. When specifying the path the <code>~</code> operator cannot be used - please specify absolute full path.</p> <p></p> </li> </ol>"},{"location":"GettingStarted/QuickStartDemo/#downloading-sample-data-recording","title":"Downloading Sample Data Recording","text":"<ol> <li> <p>Download <code>Amirkabir_Rasht-Street_Sample_Data_Recording.zip</code>.</p> <p>Download Amirkabir Rasht Street Sample Data</p> </li> <li> <p>Unzip the downloaded file.</p> </li> <li>(Optional) Make sure the downloaded recordings are not corrupt.<ol> <li>Download <code>Ouster-Studio</code> from Ouster Website. </li> <li>Run the Ouster-Studio AppImage and play the downloaded recording:     </li> <li>You should be able to see the recording.     </li> </ol> </li> </ol>"},{"location":"GettingStarted/QuickStartDemo/#launching-aut-dts-specific-sample-data-publisher","title":"Launching AUT-DT's Specific Sample Data Publisher","text":"<p>The recorded sample data of Amirkabir Rasht Street is not calibrated and won't work well with Autoware's perception module. In order to publish it correctly, follow these steps:</p> <ol> <li>Clone Digital-Twin-of-a-Traffic-Scene and move to the directory. <pre><code>git clone https://github.com/rzninvo/Digital-Twin-of-a-Traffic-Scene-Using-RSU-and-AWSIM\ncd Digital-Twin-of-a-Traffic-Scene-Using-RSU-and-AWSIM\n</code></pre></li> <li>Build the workspace. <pre><code>colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=\"-w\"\n</code></pre></li> <li> <p>Launch the publisher. <pre><code>source install/setup.bash\nros2 launch pcap_to_pointcloud2_publisher_py pcap_to_ros_launch.xml pcap_file_path:=&lt;path to Amirkabir_Rasht_Street_Ouster-OS1-Sample_Data.pcap&gt; pcap_metadata_path:=&lt;path to 20231011_0630_OS-1-64_992006000018.json&gt; aut_dt:=true publish_intensity:=false\n</code></pre></p> <p>Warning</p> <p><code>pcap_file_path</code> and <code>pcap_metadata_path</code> must be changed arbitrarily. When specifying the path the <code>~</code> operator cannot be used - please specify absolute full path.</p> <p>Info</p> <p>(Optional) You can change the <code>publish_intensity</code> parameter to <code>true</code> for better visualization. The <code>aut_dt</code> parameter is only used for Amirkabir Rasht Street Sample Data, turn it to <code>false</code> for other sample data.</p> </li> <li> <p>(Optional) Launch rviz2 in a new terminal. <pre><code>rviz2\n</code></pre></p> </li> <li>(Optional) Set the <code>Fixed Frame</code> to <code>base_link</code>. Add the published <code>PointCloud2</code> topic by clicking on the <code>Add</code> button and finding the topic. </li> <li> <p>(Optional) Set the <code>Style</code> to <code>Points</code> and you should be able to see the published calibrated sample data on the <code>/sensing/lidar/concatenated/pointcloud</code> topic. </p> <p>Info</p> <p>If your published PointCloud2 is all white, it's because of the <code>publish_intensity</code> launch file parameter being false.</p> </li> </ol>"},{"location":"GettingStarted/QuickStartDemo/#lets-run-the-aut-dt-simulation","title":"Let's run the AUT-DT simulation","text":"<ol> <li> <p>Before launching AWSIM and Autoware, open two seperate terminals and write these two commands:</p> <ol> <li>Run the static transform publisher for the <code>map</code> and <code>viewer</code> (rviz2 viewer frame):     <pre><code>ros2 run tf2_ros static_transform_publisher 0 0 0 0 0 0 map viewer\n</code></pre></li> <li> <p>Run the static transform publisher for the <code>map</code> and <code>base_link</code> (lidar coordinate frame):     <pre><code>ros2 run tf2_ros static_transform_publisher 0 0 0 0 0 0 map base_link\n</code></pre></p> <p>Warning</p> <p>The AUT-DT simulation won't work without these two commands. Also remember to run these commands before launching Autoware.</p> <p>Info</p> <p>For more information on static transform publishers, visit this link:  https://docs.ros.org/en/foxy/Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py.html.  You can change the transform vectors based on your sample data (if your sample data is not calibrated).   </p> </li> </ol> </li> <li> <p>Launch the AWSIM Amirkabir Scene by following the previous steps.</p> </li> <li>Launch the Autoware Digital Twin by following the previous steps.</li> <li>Launch the Amirkabir Sample Data Publisher by following the previous steps</li> <li>You should be able to see the real-time detection happening in Autoware's rviz2 panel.          (Optional) You can enable the <code>Sensing</code> Module to see the original published PointCloud2.     </li> <li>You should be able to see the real-time simulation in the <code>AWSIM_Amirkabir_Scene.x86_64</code> runtime.     </li> </ol> <p>You have successfuly launched the AUT-DT demo!</p>"},{"location":"GettingStarted/QuickStartDemo/#6-troubleshooting","title":"6. Troubleshooting","text":"<p>In case of any problems with running the sample AWSIM binary with Autoware, start with checking our Troubleshooting page with the most common problems.</p>"},{"location":"GettingStarted/SetupUnityProject/","title":"Setup Unity Project","text":"<p>Info</p> <p>It is advised to checkout the Quick Start Demo tutorial before reading this section.</p> <p>This page is a tutorial for setting up a AWSIM Unity project.</p>"},{"location":"GettingStarted/SetupUnityProject/#environment-preparation","title":"Environment preparation","text":""},{"location":"GettingStarted/SetupUnityProject/#system-setup","title":"System setup","text":"Ubuntu 22Windows <ol> <li>Make sure your machine meets the required hardware specifications.<ul> <li>NOTE: PC requirements may vary depending on simulation contents which may change as the simulator develops</li> </ul> </li> <li>Prepare a desktop PC with Ubuntu 22.04 installed.</li> <li>Install Nvidia drivers and Vulkan Graphics API.</li> <li>Install git.</li> </ol> <ol> <li>Make sure your machine meets the required hardware specifications.<ul> <li>NOTE: PC requirements may vary depending on simulation contents which may change as the simulator develops</li> </ul> </li> <li>Prepare a desktop PC with Windows 10 or 11 (64 bit) installed.</li> <li>Install git.</li> </ol>"},{"location":"GettingStarted/SetupUnityProject/#unity-installation","title":"Unity installation","text":"<p>Info</p> <p>AWSIM's Unity version is currently 2021.1.7f1</p> <p>Follow the steps below to install Unity on your machine:</p> <ol> <li>Install UnityHub to manage Unity projects. Please go to Unity download page and download latest <code>UnityHub.AppImage</code>. </li> <li> <p>Install Unity 2021.1.7f1 via UnityHub.</p> <ul> <li> <p>Open your applications page and locate <code>unityhub</code> (or use the searchbar). Attempt to run the app:     </p> <p>Info</p> <p>You can also type <code>$ unityhub</code> in your terminal to run <code>unityhub</code>.   </p> </li> <li> <p>To install Unity Editor please proceed as shown on the images below  </p> </li> <li>At this point, your Unity installation process should have started.</li> <li>After successful installation the version will be available under the <code>Installs</code> tab in Unity Hub. </li> </ul> </li> </ol>"},{"location":"GettingStarted/SetupUnityProject/#open-awsim-project","title":"Open AWSIM project","text":"<p>To open the Unity AWSIM project in Unity Editor: 1. Make sure you have the AWSIM repository cloned     <pre><code>git clone https://github.com/rzninvo/AWSIM.git\n</code></pre></p> <ol> <li> <p>Launch UnityHub from the terminal.     <pre><code>unityhub\n</code></pre></p> </li> <li> <p>Open the project in UnityHub</p> <ul> <li> <p>Click the <code>Open</code> button </p> </li> <li> <p>Navigate the directory where the AWSIM repository was cloned to </p> </li> <li> <p>The project should be added to <code>Projects</code> tab in Unity Hub. To launch the project in Unity Editor simply click the <code>AWSIM</code> item </p> </li> <li> <p>The project is now ready to use </p> </li> </ul> </li> </ol> <p>Warning</p> <p>If you get the safe mode dialog when starting UnityEditor, you may need to install openssl.</p> <ol> <li>download libssl <code>$ wget http://security.ubuntu.com/ubuntu/pool/main/o/openssl1.0/libssl1.0.0_1.0.2n-1ubuntu5.13_amd64.deb</code></li> <li>install <code>sudo dpkg -i libssl1.0.0_1.0.2n-1ubuntu5.11_amd64.deb</code></li> </ol>"},{"location":"GettingStarted/SetupUnityProject/#import-external-packages","title":"Import external packages","text":"<p>To properly run and use AWSIM project in Unity it is required to download map package which is not included in the repository.</p> <ol> <li> <p>Download and import <code>Japan_Tokyo_Nishishinjuku.unitypackage</code></p> <p>Download Map files (unitypackage)</p> </li> <li> <p>In Unity Editor, from the menu bar at the top, select <code>Assets -&gt; Import Package -&gt; Custom Package...</code> and navigate the <code>Japan_Tokyo_Nishishinjuku.unitypackage</code> file.  </p> </li> <li><code>Nishishinjuku</code> package has been successfully imported under <code>Assets/AWSIM/Externals/</code>directory. </li> </ol> <p>Info</p> <p>The Externals directory is added to the <code>.gitignore</code> because the map has a large file size and should not be directly uploaded to the repository.</p>"},{"location":"GettingStarted/SetupUnityProject/#run-the-demo-in-editor","title":"Run the demo in Editor","text":"<p>The following steps describe how to run the demo in Unity Editor:</p> <ol> <li>Open the <code>Amirkabir_DT_Scene.unity</code> scene placed under <code>Assets/AWSIM/Scenes/Samples</code> directory</li> <li> <p>Run the simulation by clicking <code>Play</code> button placed at the top section of Editor. </p> <p>Warning</p> <p>If you open <code>unityhub</code> from the applications menu, you might not be able to see the simulated vehicles. In this case, run unityhub from the terminal.</p> <p></p> </li> </ol>"},{"location":"Introduction/AWSIM/","title":"AWSIM","text":"<p>AWSIM is an open-source simulator made with Unity for autonomous driving research and development.  It is developed for self-driving software like Autoware. This simulator aims to bridge the gap between the virtual and real worlds, enabling users to train and evaluate their autonomous systems in a safe and controlled environment before deploying them on real vehicles. It provides a realistic virtual environment for training, testing, and evaluating various aspects of autonomous driving systems. </p> <p>AWSIM simulates a variety of real-world scenarios, with accurate physics and sensor models. It offers a wide range of sensors, such as: Cameras, GNSS, IMU and  LiDARs, allowing developers to simulate their  autonomous vehicle's interactions with the environment accurately. The simulator also models dynamic objects, such as pedestrians, other vehicles, and traffic lights, making it possible to study interactions and decision-making in complex traffic scenarios. This enables the testing and evaluation of perception, planning, and control algorithms under different sensor configurations and scenarios.</p> <p>AWSIM supports a flexible and modular architecture, making it easy to customize and extend its capabilities. Users can modify the current or add a new environment with their own assets and traffic rules to create custom scenarios to suit their specific research needs. This allows for the development and testing of advanced algorithms in diverse driving conditions.</p> <p>Because AWSIM was developed mainly to work with Autoware, it supports:</p> <ul> <li>Ubuntu 22.04 and Windows 10/11</li> <li>ROS2 Humble distribution</li> </ul> <p>Prerequisites</p> <p>You can read more about the prerequisites and running AWSIM here.</p> <p>Connection with Autoware</p> <p>Introduction about how the connection between AWSIM and Autoware works can be read here.</p>"},{"location":"Introduction/AWSIM/#architecture","title":"Architecture","text":"<p>To describe the architecture of AWSIM, first of all, it is necessary to mention the <code>Scene</code>. It contains all the objects occurring in the simulation of a specific scenario and their configurations. The default AWSIM scene that is developed to work with Autoware is called AutowareSimulation. For more information, click here.</p> <p></p> <p>The primary AUT_DT scene, developed specifically for DT research, is named Amirkabir_DT_Scene. This scene serves as a sample scene. Its key component is the <code>DetectionSubscriber</code> object. This object subscribes to the Perception module of Autoware and retrieves real-time detected objects from streaming LiDAR data. The next important object is the <code>SpawnPoint</code> which should always be the location of the static LiDAR recording the real-world environment.</p>"},{"location":"Introduction/AWSIM/#refrences","title":"Refrences","text":"<p>https://tier4.github.io/AWSIM/Introduction/AWSIM/</p>"},{"location":"Introduction/AWSIM-Autoware%20Integration/","title":"AWSIM-Autoware Integration","text":"<p>Autoware is a robust open-source software suite designed for autonomous driving. Featuring a modular design that includes perception, localization, planning, and control modules, it offers a comprehensive solution for developing self-driving vehicles. When integrated with the AWSIM simulator, Autoware enables safe testing, validation, and refinement of autonomous driving algorithms across a variety of scenarios. This combination can also be used for the simulation of real-world traffic conditions, thereby increasing the realism of the simulated environment and improving validation accuracy for autonomous vehicle testing.</p> <p>Run with Autoware</p> <p>If you would like to know how to run AWSIM with Autoware, we encourage you to read this section.</p>"},{"location":"Introduction/AWSIM-Autoware%20Integration/#features","title":"Features","text":"<p>The combination of Autoware and AWSIM provides the opportunity to check the correctness of the vehicle's behavior in various traffic situations. Here are presented some typical features provided by this combination. Moreover, examples of detecting several bad behaviors are included. Below are some extended features for the Digital Twin branch.</p>"},{"location":"Introduction/AWSIM-Autoware%20Integration/#pcap-recording-to-pointcloud2-publisher","title":"*.pcap Recording to PointCloud2 Publisher","text":"<p>All *.pcap LiDAR recordings can be converted to ROS2 PointCloud2 messages.   </p>"},{"location":"Introduction/AWSIM-Autoware%20Integration/#real-time-object-detection-and-tracking-using-autoware","title":"Real-Time Object Detection and Tracking using Autoware","text":""},{"location":"Introduction/AWSIM-Autoware%20Integration/#traffic-simulation-in-awsim","title":"Traffic Simulation in AWSIM","text":""},{"location":"Introduction/AWSIM-Autoware%20Integration/#combination-architecture","title":"Combination Architecture","text":"<p>The combination of AWSIM with Autoware in AUT_DT is possible thanks to the Perception module of Autoware architecture. The component responsible for ensuring connection with these modules from the AWSIM side is <code>DetectionSubscriber</code>. It has been adapted to the Autoware architecture and provides ROS2 topic-based communication. However, the other essential component is the <code>ROS2 PointCloud2 Publisher</code>, which provides ROS2-based PointCloud data to Autoware.</p> <p>The <code>ROS2 PointCloud2 Publisher</code> component provides the publication of the current LiDAR frame through a script written by Python. It provides real-time information such as: current frame timestamp, current frame pointcloud data.</p> <p>On the other hand, the <code>Sensing</code> component is responsible for subscribing to the ROS2 Pointcloud2 topic from Autoware. It subscribes to the current stream of LiDAR data, whether its recorded data or streaming data.  </p> <p>The processing of the recieved data is done by the <code>Perception</code> component. This component will detect the current 3D objects in the scene and track them, providing important information about the detected objects such as: ObjectID, Object Class, Object Position relative to the LiDAR coordinate frame, Object Orientation, Object's Twist parameters (Kinematics).</p> <p>Currently, there are no data pipelines from AWSIM to Autoware.</p> <p>More about <code>AWSIM</code> and its original combination architecture is described in this link</p>"},{"location":"Introduction/AWSIM-Autoware%20Integration/#sequence-diagram","title":"Sequence diagram","text":"<p>Below is a simplified sequential diagram of information exchange in connection between ROS2 PointCloud2 Publisher, AWSIM and Autoware. As you can see, the first essential information is the tf2 parameters of the LiDAR coordinate frame (base-link) relative to the map coordinate frame and viewer coordinate frame, which are manually given to Autoware. These parameters are used in the process of automatic position initialization on Autoware side, and play a vital role in the perception module. At the same time, the simulation on AWSIM side is updated.</p> <p>Next in the diagram is the main information update loop in which:</p> <ul> <li>During each cycle there is a PointCloud2 data being published from ROS2 PointCloud2 Publisher.</li> <li>The PointCloud2 data topic is then collected by a subscriber from the <code>Sensing</code> component of Autoware. The <code>Perception</code> component will process the LiDAR pointcloud and publish the <code>Tracked Objects</code> data. </li> <li>The <code>DetectionSubscriber</code> from the AWSIM side, subscribes to the <code>Tracked Objects</code> topic and recieves the data. After processing, each detected vehicle will either get spawned or updated based on it's ID.</li> </ul> <p>The order of information exchange presented in the diagram is a simplification. The exchange of information takes place through the publish-subscribe model and each data is sent with a predefined frequency.</p> <p></p>"},{"location":"Introduction/Autoware/","title":"Autoware","text":"<p>Autoware is an open-source software platform specifically designed for autonomous driving applications. It was created to provide a comprehensive framework for developing and testing autonomous vehicle systems. Autoware offers a collection of modules and libraries that assist in various tasks related to perception, planning, and control, making it easier for researchers and developers to build autonomous driving systems.</p> <p>The primary purpose of Autoware is to enable the development of self-driving technologies by providing a robust and flexible platform. It aims to accelerate the research and deployment of autonomous vehicles by offering a ready-to-use software stack. Autoware focuses on urban driving scenarios and supports various sensors such as LiDAR, Radars, and Cameras, allowing for perception of the vehicle's surroundings.</p>"},{"location":"Introduction/Autoware/#why-use-awsim-with-autoware","title":"Why use AWSIM with Autoware?","text":"<p>Autoware can be used with a AWSIM for several reasons. Firstly, simulators like AWSIM provide a cost-effective and safe environment for testing and validating autonomous driving algorithms before deploying them on real vehicles. Autoware's integration with a simulator allows developers to evaluate and fine-tune their algorithms without the risk of real-world accidents or damage.</p> <p>Additionally, simulators enable developers to recreate complex driving scenarios, including difficult conditions or rare events, which may be difficult to replicate in real-world testing with such high fidelity. Autoware's compatibility with a AWSIM allows seamless integration between the software and the simulated vehicle, enabling comprehensive testing and validation of autonomous driving capabilities. By utilizing a simulator, Autoware can be extensively tested under various scenarios to ensure its robustness and reliability.</p>"},{"location":"Introduction/Autoware/#architecture","title":"Architecture","text":"<p>In terms of architecture, Autoware follows a modular approach. It consists of multiple independent modules that communicate with each other through a ROS2. This modular structure allowing users to select and combine different modules based on their specific needs and requirements. The software stack comprises multiple components, including perception, localization, planning, and control modules. Here's a brief overview of each module:</p> <ul> <li> <p>Sensing -  acquires data from sensors different sensors mounted on the autonomous vehicle such as LiDARs, GNSS, IMU and cameras. It pre-processing received data in order to later extract relevant information about the surrounding environment through the Perception module or about vehicle location by the Localization module. More details here.</p> </li> <li> <p>Perception - performs advanced processing of sensor data (LiDARs, cameras) to extract meaningful information about the surrounding environment. It performs tasks like object detection (other vehicles, pedestrians), lane detection, and traffic lights recognition. More details here.</p> </li> <li> <p>Localization - performs a fusion of data from Sensing module like LiDAR, GNSS, IMU, and odometry sensors to estimate the vehicle's position and orientation accurately. More details here.</p> </li> <li> <p>Planning - generates a safe and feasible trajectory for the autonomous vehicle based on the information gathered from Perception and Localization. It also takes into account various factors from Map like traffic rules and road conditions. More details here.</p> </li> <li> <p>Control - executes the planned trajectory by sending commands to the vehicle's actuators, such as steering, throttle, and braking. It ensures that the vehicle follows the desired trajectory while maintaining safety and stability. More details here.</p> </li> <li> <p>Vehicle Interface - is a crucial component that enables communication and interaction between Autoware software system and a vehicle. It facilitates the exchange of control signals and vehicle information necessary for autonomous driving operations. The vehicle interface ensures that Autoware can send commands to the vehicle, such as acceleration, braking, and steering, while also receiving real-time data from the vehicle, such as speed, position, and sensors data. It acts as a bridge, allowing Autoware to seamlessly interface with the specific characteristics and requirements of the vehicle it is operating with. More details here.</p> </li> <li> <p>Map - the map module creates and maintains  a representation of the environment in which the autonomous vehicle operates. It combines data from Lanelet2 (<code>*.osm</code>) and PointCloud (<code>*.pcd</code>) to generate a detailed map. The map contains information about road geometries, lane markings, traffic lights, rules, and other relevant features. Map serves as a crucial reference for planning and decision-making processes. More details here.</p> </li> </ul>"},{"location":"Introduction/Autoware/#source","title":"Source","text":"<p>https://tier4.github.io/AWSIM/Introduction/Autoware/</p>"},{"location":"Introduction/Autoware_DT/","title":"Autoware - Digital Twin Branch","text":"<p>The Autoware Digital Twin branch, tailored for AUT_DT research, is a streamlined variant of Autoware. This specialized version includes the Perception, Map, and Sensing modules, with the Perception module playing a pivotal role by housing all of Autoware's 3D Detection and Tracking algorithms.</p> <p>AWSIM and Autoware Integration</p> <p>Learn about the integration of AWSIM and Autoware here.</p>"},{"location":"Introduction/Autoware_DT/#architecture","title":"Architecture","text":"<p>ROS2 PointCloud2 Publisher</p> <p>In the absence of an Ego Vehicle in this research, PointCloud data, typically received from AWSIM's Ego Vehicle, must be manually published to the Sensing module using recorded or real-time LiDAR data. Click here to see an example.</p>"}]}